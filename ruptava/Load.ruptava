импортировать java.util.СписокМассива;
импортировать java.util.Список;
импортировать java.util.ХэшКарта;
импортировать java.util.Карта;

публичный класс Load {

    приватный статический конечный Список<Строка> ключевыеСтроки = новый СписокМассива<Строка>() {
        {
            добавить("публичный статический пустой 1");
            добавить("публичный статический пустой 2");
            добавить("публичный статический пустой 3");
            добавить("публичный статический пустой 4");
            добавить("публичный статический пустой 5");
        }
    };

    приватный статический конечный целый[][] матрица = {
        {0, 1, 2, 3, 4},
        {1, 2, 3, 4, 5},
        {2, 3, 4, 5, 6},
        {3, 4, 5, 6, 7}
    };

    приватный статический конечный Карта<Строка, Логический> журнал = новый ХэшКарта<>();

    статический {
        заполнитьЖурнал();
    }

    /**
     * Альтернатива методу "main" в java.
     */
    публичный статический пустой load() {
        распечататьСтроки();
        распечататьМатрицу();
        распечататьАтмосферуПланеты();
        проверитьПосещаемость();
    }

    /**
     * Печатает список из строк с ключевыми словами Ruptava.
     */
    приватный статический пустой распечататьСтроки() {
        для (Строка ключ : ключевыеСтроки) {
            системноРаспечататьСтроку(ключ);
        }
    }

    /**
     * Печатает матрицу из целых чисел.
     */
    приватный статический пустой распечататьМатрицу() {
        системноРаспечататьСтроку("");
        для (целый i = 0; i < матрица.длина; i++) {
           для (целый j = 0; j < матрица[i].длина; j++) {
               системноРаспечатать(матрица[i][j] + " ");
           }
           Система.вывод.распечатать("\n");
        }
    }

    /**
     * Печатает атмосферу планеты Земля.
     */
    приватный статический пустой распечататьАтмосферуПланеты() {
        Список<Строка> атмосфера = получитьАтмосферуПланеты(3);
        системноРаспечататьСтроку("\nАтмосфера планеты \"Земля\" состоит из:");
        для (Строка компонент : атмосфера) {
            Система.вывод.распечататьСтроку(компонент);
        }
    }

    /**
     * Определяет атмосферу планеты по значению номерОтСолнца.
     */
    приватный статический Список<Строка> получитьАтмосферуПланеты(целый номерОтСолнца) {
        Список<Строка> результат = новый СписокМассива<>();
        когда (номерОтСолнца) {
            случай 1: результат.добавить("Нет атмосферы");
                прервать;
            случай 2:
            случай 4: результат.добавить("Углекислый газ");
                прервать;
            случай 3: результат.добавить("Углекислый газ");
                результат.добавить("Азот");
                результат.добавить("Кислород");
                прервать;
            случай 5:
            случай 6: результат.добавить("Водород");
                результат.добавить("Гелий");
                прервать;
            случай 7:
            случай 8: результат.добавить("Метан");
                результат.добавить("Водород");
                результат.добавить("Гелий");
                прервать;
            стандартный:
                прервать;
        }
        вернуть результат;
    }

    /**
     * Заполняет журнал посещаемости учащихся.
     */
    приватный статический пустой заполнитьЖурнал() {
        журнал.положить("Ваня", правда);
        журнал.положить("Женя", ложь);
        журнал.положить("Дима", правда);
        журнал.положить("Петя", ложь);
        журнал.положить("Коля", правда);
        журнал.положить("Лена", правда);
        журнал.положить("Катя", ложь);
        журнал.положить("Таня", правда);
        журнал.положить("Галя", ложь);
    }

    /**
     * Проверяет посещаемость учащихся.
     */
    приватный статический пустой проверитьПосещаемость() {
        системноРаспечататьСтроку("\nПроверяем посещаемость:");
        для (Карта.Запись<Строка, Логический> запись : журнал.наборЗаписей()) {
            если (запись.получитьЗначение() == правда) {
                Система.вывод.распечататьСтроку(запись.получитьКлюч() + " здесь, молодец!");
            } иначе {
                Система.ошибка.распечататьСтроку(запись.получитьКлюч() + " отсутствует, плохо!");
            }
        }
    }
}
